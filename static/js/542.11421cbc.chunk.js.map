{"version":3,"file":"static/js/542.11421cbc.chunk.js","mappings":"8KAGMA,EAASC,EAAAA,GAAAA,OAAa,4EACf,SAACC,GAAK,OAAKA,EAAMC,SAAW,MAAM,IACnC,SAACD,GAAK,OAAKA,EAAME,QAAU,MAAM,IAC9B,SAACF,GAAK,OAAKA,EAAMG,MAAQ,MAAM,IAG/B,SAASC,EAAgBJ,GACtC,OACE,SAACF,EAAM,CACLO,KAAML,EAAMK,KACZC,SAAUN,EAAMM,SAChBC,QAASP,EAAMQ,OACfL,KAAMH,EAAMG,KACZF,QAASD,EAAMC,QACfC,OAAQF,EAAME,OAAO,SAEpBF,EAAMS,SAGb,C,+FCnBMC,EAAOX,EAAAA,GAAAA,MAAAA,MAAmB,CAC9BY,WAAW,GADAZ,CAEX,0FAMa,SAASa,EAAMZ,GAC5B,OACE,SAACU,EAAI,CACHL,KAAML,EAAMK,KACZQ,KAAMb,EAAMa,KACZC,MAAOd,EAAMc,MACbC,SAAUf,EAAMQ,QAGtB,C,0KCZME,EAAOX,EAAAA,GAAAA,IAAU,8KAUjBiB,EAAQjB,EAAAA,GAAAA,IAAU,uCAIlBkB,EAAOlB,EAAAA,GAAAA,KAAW,qEAKlBmB,EAAQnB,EAAAA,GAAAA,MAAY,qEAKXA,EAAAA,GAAAA,OAAa,8GAOb,SAASoB,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KAC9B,GAAwCF,EAAAA,EAAAA,UAAS,IAAG,eAA7CG,EAAY,KAAEC,EAAe,KACpC,GAAoCJ,EAAAA,EAAAA,WAAS,GAAM,eAA5CK,EAAU,KAAEC,EAAa,KAChC,GAA0CN,EAAAA,EAAAA,WAAS,GAAM,eAAlDO,EAAa,KAAEC,EAAgB,KACtC,GAAoCR,EAAAA,EAAAA,WAAS,GAAM,eAA5CS,EAAU,KAAEC,EAAa,MAEhCC,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,CAAC,CAAEP,WAAAA,EAAYE,cAAAA,KAElB,IAAMM,EAAY,yCAAG,WAAOC,GAAC,sEACb,IAAIC,OAAO,oCACfC,KAAKF,EAAEG,OAAOvB,QACtBY,GAAc,GAEhBJ,EAAaY,EAAEG,OAAOvB,OAAO,2CAC9B,gBANiB,sCAQZwB,EAAkB,yCAAG,WAAOJ,GAAC,sEAC7BA,EAAEG,OAAOvB,MAAMyB,QAAU,GAC3BX,GAAiB,GAEnBJ,EAAgBU,EAAEG,OAAOvB,OAAO,2CACjC,gBALuB,sCAOlB0B,EAAe,yCAAG,WAAON,GAAC,sEAC9BA,EAAEO,iBACEZ,GACFa,IACD,2CACF,gBALoB,sCAOfV,EAAS,yCAAG,mFAEdF,KADEL,IAAcE,IAIjB,2CACF,kBANc,mCAQTgB,EAAM,CACVC,MAAOvB,EACPwB,SAAUtB,GAGNmB,EAAgB,yCAAG,WAAOR,GAAC,sEACtB,iFAGDY,EAAAA,EAAAA,KAHC,yDAGeH,GAAK,KAAD,EAC1BrB,EAAa,IACbE,EAAgB,IAChBuB,MAAM,8EACNC,OAAOC,SAASC,KAAO,IAAI,kDAE3BH,MAAM,8EACNzB,EAAa,IACbE,EAAgB,IAAI,0DAEvB,gBAdqB,sCAgBtB,OACE,SAACd,EAAI,WACH,UAACM,EAAK,YACJ,sDACA,UAACC,EAAI,CAACkC,SAAUX,EAAgB,WAC9B,SAACtB,EAAK,CAACkC,QAAQ,aAAY,iCAC3B,SAAC,IAAc,CACb/C,KAAK,QACLQ,KAAK,UACLC,MAAOO,EACPb,OAAQyB,KAEV,SAACf,EAAK,CAACkC,QAAQ,gBAAe,uCAC9B,SAAC,IAAc,CACb/C,KAAK,WACLQ,KAAK,gBACLC,MAAOS,EACPf,OAAQ8B,KAGV,SAAC,IAAe,CACdjC,KAAK,SACLC,UAAWuB,EACXpB,QAAQ,2BACRN,KAAK,OACLF,QAAQ,SACRC,OAAO,sBAMnB,C","sources":["components/ButtonComponent.js","components/InputComponent.js","pages/Signup.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  padding: ${(props) => props.padding || \"none\"};\r\n  margin: ${(props) => props.margin || \"none\"};\r\n  font-size: ${(props) => props.size || \"18px\"};\r\n`;\r\n\r\nexport default function ButtonComponent(props) {\r\n  return (\r\n    <Button\r\n      type={props.type}\r\n      disabled={props.disabled}\r\n      onClick={props.method}\r\n      size={props.size}\r\n      padding={props.padding}\r\n      margin={props.margin}\r\n    >\r\n      {props.btnName}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Cont = styled.input.attrs({\r\n  autoFocus: true,\r\n})`\r\n  border-radius: 5px;\r\n  font-size: 18px;\r\n  padding: 10px 20px;\r\n`;\r\n\r\nexport default function Input(props) {\r\n  return (\r\n    <Cont\r\n      type={props.type}\r\n      name={props.name}\r\n      value={props.value}\r\n      onChange={props.method}\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 컴포넌트 import\r\nimport InputComponent from \"../components/InputComponent\";\r\nimport ButtonComponent from \"../components/ButtonComponent\";\r\n\r\nconst Cont = styled.div`\r\n  width: 70vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Inner = styled.div`\r\n  width: 70%;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Lable = styled.label`\r\n  text-align: left;\r\n  padding: 20px 0 0 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 20px 0;\r\n  margin: 40px 0 0 0;\r\n  border-radius: 5px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport default function Signup() {\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [checkEmail, setCheckEmail] = useState(false);\r\n  const [checkPassword, setCheckPassword] = useState(false);\r\n  const [validation, setValidation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkData();\r\n  }, [{ checkEmail, checkPassword }]);\r\n\r\n  const handleUserId = async (e) => {\r\n    const regex = new RegExp(\"^[a-zA-Z0-9+-_.]+@[a-zA-Z0-9-]+$\");\r\n    if (regex.test(e.target.value)) {\r\n      setCheckEmail(true);\r\n    }\r\n    setUserEmail(e.target.value);\r\n  };\r\n\r\n  const handleUserPassword = async (e) => {\r\n    if (e.target.value.length >= 8) {\r\n      setCheckPassword(true);\r\n    }\r\n    setUserPassword(e.target.value);\r\n  };\r\n\r\n  const checkValidation = async (e) => {\r\n    e.preventDefault();\r\n    if (validation) {\r\n      handleFormSubmit();\r\n    }\r\n  };\r\n\r\n  const checkData = async () => {\r\n    if (checkEmail && checkPassword) {\r\n      setValidation(true);\r\n    } else {\r\n      setValidation(false);\r\n    }\r\n  };\r\n\r\n  const val = {\r\n    email: userEmail,\r\n    password: userPassword,\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    const url = `https://pre-onboarding-selection-task.shop/auth/signup`;\r\n\r\n    try {\r\n      await axios.post(url, val);\r\n      setUserEmail(\"\");\r\n      setUserPassword(\"\");\r\n      alert(\"회원가입이 완료되었습니다!\");\r\n      window.location.href = \"/\";\r\n    } catch (err) {\r\n      alert(\"회원가입에 실패하였습니다.\");\r\n      setUserEmail(\"\");\r\n      setUserPassword(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Cont>\r\n      <Inner>\r\n        <h1>회원가입</h1>\r\n        <Form onSubmit={checkValidation}>\r\n          <Lable htmlFor=\"inputEmail\">이메일</Lable>\r\n          <InputComponent\r\n            type=\"email\"\r\n            name=\"inputId\"\r\n            value={userEmail}\r\n            method={handleUserId}\r\n          />\r\n          <Lable htmlFor=\"inputPassword\">비밀번호</Lable>\r\n          <InputComponent\r\n            type=\"password\"\r\n            name=\"inputPassword\"\r\n            value={userPassword}\r\n            method={handleUserPassword}\r\n          />\r\n\r\n          <ButtonComponent\r\n            type=\"submit\"\r\n            disabled={!validation}\r\n            btnName=\"회원가입\"\r\n            size=\"21px\"\r\n            padding=\"20px 0\"\r\n            margin=\"40px 0 0 0\"\r\n          />\r\n        </Form>\r\n      </Inner>\r\n    </Cont>\r\n  );\r\n}\r\n"],"names":["Button","styled","props","padding","margin","size","ButtonComponent","type","disabled","onClick","method","btnName","Cont","autoFocus","Input","name","value","onChange","Inner","Form","Lable","Signup","useState","userEmail","setUserEmail","userPassword","setUserPassword","checkEmail","setCheckEmail","checkPassword","setCheckPassword","validation","setValidation","useEffect","checkData","handleUserId","e","RegExp","test","target","handleUserPassword","length","checkValidation","preventDefault","handleFormSubmit","val","email","password","axios","alert","window","location","href","onSubmit","htmlFor"],"sourceRoot":""}